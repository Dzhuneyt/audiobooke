@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-blue);
$candy-app-accent: mat-palette($mat-indigo, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);

// Style the snackbars
@mixin candy-snackbar-theme($theme) {
  // Extract the palettes you need from the theme definition.
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);

  // Define any styles affected by the theme.

  .bg-color-main {
    background: mat-color($primary);
  }
  // @TODO add more base classes like .bg-color-warning, etc
  // @TODO also add base classes for typography

  .mat-snack-bar-container {
    &.success {
      background: mat-color($primary);
    }

    &.error {
      background: mat-color($warn);
    }
  }

  ::ng-deep .mat-paginator {
    background: transparent;
  }

}

@include candy-snackbar-theme($candy-app-theme);
